policy_module(helix, 1.100.1)

########################################
#
# Declarations
#

type helix_t;
type helix_exec_t;
init_daemon_domain(helix_t, helix_exec_t)

permissive helix_t;

type helix_initrc_exec_t;
init_script_file(helix_initrc_exec_t)

type helix_conf_t;
files_type(helix_conf_t)

type helix_var_lib_t;
files_type(helix_var_lib_t)

type helix_var_run_t;
files_type(helix_var_run_t)

type helix_port_t;
corenet_port(helix_port_t)

########################################
#
# helix local policy
#
allow helix_t self:process { fork };

allow helix_t self:fifo_file rw_fifo_file_perms;
allow helix_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(helix_t, helix_conf_t, helix_conf_t)
manage_files_pattern(helix_t, helix_conf_t, helix_conf_t)

manage_dirs_pattern(helix_t, helix_var_lib_t, helix_var_lib_t)
manage_files_pattern(helix_t, helix_var_lib_t, helix_var_lib_t)
files_var_lib_filetrans(helix_t, helix_var_lib_t, { dir file })

manage_dirs_pattern(helix_t, helix_var_run_t, helix_var_run_t)
manage_files_pattern(helix_t, helix_var_run_t, helix_var_run_t)

sysnet_dns_name_resolve(helix_t)
corenet_all_recvfrom_unlabeled(helix_t)

allow helix_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(helix_t)
corenet_tcp_sendrecv_generic_node(helix_t)
corenet_tcp_sendrecv_all_ports(helix_t)
corenet_tcp_bind_generic_node(helix_t)

gen_require(`
    type helix_port_t;
')
allow helix_t helix_port_t:tcp_socket name_bind;

gen_require(`
    type helix_port_t;
')
allow helix_t helix_port_t:tcp_socket name_connect;

domain_use_interactive_fds(helix_t)

files_read_etc_files(helix_t)

miscfiles_read_localization(helix_t)

sysnet_dns_name_resolve(helix_t)

allow helix_t helix_exec_t:file execute_no_trans;
allow helix_t self:process setsched;
corecmd_exec_ls(helix_t)
corenet_tcp_connect_http_port(helix_t)
dev_read_urand(helix_t)
fs_getattr_xattr_fs(helix_t)
kernel_read_system_state(helix_t)
